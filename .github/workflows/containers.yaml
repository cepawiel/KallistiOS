name: Build Docker Images

on:
  push:
    branches: [master]
    # paths:
    #   - 'gcc-base/**'
    #   - 'gcc-toolchain/**'
    #   - 'kos-toolchain/**'
    #   - 'kos-toolchain-cmake/**'


jobs:
  # define job to build and publish containers
  build-gcc-deps-container:
    name: Build Container of SH4 GCC Build Prerequisites
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # authenticate with GHCR
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      # only build if any if files were changed
      - name: Build+Push dc-gcc-prereqs
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: ./utils/containers/gcc-prereqs
          tags: |
            ghcr.io/cepawiel/dc-gcc-prereqs:latest
          push: true

  build-gcc-container:
    needs: build-gcc-deps-container
    name: Build Container for SH4 GCC
    runs-on: ubuntu-latest

    outputs:
      outcome: ${{ steps.status.outcome }}

    strategy:
      matrix:
        gcc: [4, 9]

    # steps to perform in job
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          # get preciding commit for use with changed-files
          fetch-depth: 2

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # authenticate with GHCR
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
      # get changed files
      - id: changed-files
        uses: tj-actions/changed-files@v18
        with:
          files: |
            ./.github/workflows/containers.yaml
            ./utils/dc-chain/**
            ./utils/container/gcc-toolchain/Dockerfile

      - name: Build+Push dc-gcc-toolchain
        id: build-image
        if: |
          steps.changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./utils/containers/gcc-toolchain
          build-args: KOS_GCC_VER=${{ matrix.gcc }}
          tags: |
            ghcr.io/cepawiel/dc-gcc-toolchain:gcc${{ matrix.gcc }}-latest
            ghcr.io/cepawiel/dc-gcc-toolchain:gcc${{ matrix.gcc }}-${{github.sha}}
          push: true

      # set output variable
      - id: status
        name: Set Container Status Output Variable
        run: echo "::set-output name=outcome::${{steps.build-image.outcome}}"

  # TODO: Seperate out ports from this image
  build-kos-base-container:
    needs: build-gcc-container
    name: Build Container for KOS
    runs-on: ubuntu-latest

    outputs:
      outcome: ${{ steps.status.outcome }}

    strategy:
      matrix:
        gcc: [4, 9]

    # steps to perform in job
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          # get preciding commit for use with changed-files
          fetch-depth: 2

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # authenticate with GHCR
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      
     # get changed files
      - id: changed-files
        uses: tj-actions/changed-files@v18
        with:
          files: |
            ./.github/workflows/containers.yaml
            ./utils/dc-chain/**
            ./utils/containers/kos-base/Dockerfile

      - name: Build+Push dc-kos-base
        id: build-image
        # only run if files changed or toolchain was rebuilt
        if: |
          steps.changed-files.outputs.any_changed == 'true' ||
          ${{ needs.build-gcc-container.outputs.outcome }} == 'success'
        uses: docker/build-push-action@v2
        with:
          context: ./utils/containers/kos-base
          build-args: KOS_GCC_VER=${{ matrix.gcc }}
          tags: |
            ghcr.io/cepawiel/dc-kos-base:gcc${{ matrix.gcc }}-latest
            ghcr.io/cepawiel/dc-kos-base:gcc${{ matrix.gcc }}-${{github.sha}}
          push: true

      # set output variable
      - id: status
        name: Set Container Status Output Variable
        run: echo "::set-output name=outcome::${{steps.build-image.outcome}}"

  # TODO: create image with ports
  # TODO: Image with cmake